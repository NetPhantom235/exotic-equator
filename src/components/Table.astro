---
interface Props {
  headers: string[];
  rows: any[][];
  class?: string;
}
const { headers, rows, class: className = '' } = Astro.props;
---
<div class:list={['overflow-x-auto', 'rounded-2xl', 'shadow-md', 'bg-white', 'dark:bg-gray-900', className]}>
  <table class="min-w-full text-base font-sans">
    <thead class="bg-gray-50 dark:bg-gray-800">
      <tr>
        {headers.map(h => (
          <th class="px-6 py-3 text-left font-semibold text-gray-500 dark:text-gray-300 uppercase tracking-wider">{h}</th>
        ))}
      </tr>
    </thead>
    <tbody class="divide-y divide-gray-200 dark:divide-gray-800">
      {rows.length === 0 && (
        <tr>
          <td colspan={headers.length} class="text-center py-8 text-gray-400">Sin datos</td>
        </tr>
      )}
      {rows.map((row, i) => (
        <tr class="hover:bg-gray-50 dark:hover:bg-gray-800 transition">
          {row.map((cell, j) => (
            <td class="px-6 py-4 text-gray-900 dark:text-gray-100">{cell}</td>
          ))}
        </tr>
      ))}
    </tbody>
  </table>
</div> 