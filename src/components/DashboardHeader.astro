---
interface Props {
  title: string;
  user?: {
    id: string;
    email: string;
    role: string;
  };
}

const { title, user } = Astro.props;
const userEmail = user?.email || 'Invitado';
const userRole = user?.role || 'No autenticado';
const userInitial = userEmail ? userEmail.charAt(0).toUpperCase() : 'G';
---

<header class="dashboard-header">
  <div class="header-content">
    <h1 class="header-title">{title}</h1>
    <div class="header-actions">
      <button class="header-button" id="refreshButton">
        <svg xmlns="http://www.w3.org/2000/svg" class="icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
        </svg>
        <span>Actualizar</span>
      </button>
      <div class="user-profile">
        <div class="user-info">
          <span class="user-name">{userEmail}</span>
          <span class="user-role">{userRole}</span>
        </div>
        <div class="user-avatar">
          {userInitial}
        </div>
      </div>
    </div>
  </div>
</header>

<style>
.dashboard-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  background: var(--background-secondary);
  border-bottom: 1px solid var(--border-color);
  box-shadow: 0 2px 8px 0 rgba(0,0,0,0.12);
  z-index: 2;
  position: relative;
}
.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.header-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-primary);
  letter-spacing: -0.02em;
}
.header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
}
.header-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  background: var(--background-tertiary, #f3f4f6);
  border: none;
  border-radius: 0.375rem;
  color: var(--text-primary);
  font-weight: 500;
  font-size: 0.875rem;
  transition: background 0.2s;
  cursor: pointer;
}
.header-button:hover {
  background: var(--background-hover, #e5e7eb);
}
.user-profile {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}
.user-info {
  display: flex;
  flex-direction: column;
  text-align: right;
}
.user-name {
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-primary);
}
.user-role {
  font-size: 0.75rem;
  color: var(--text-secondary);
}
.user-avatar {
  width: 2rem;
  height: 2rem;
  background: var(--primary-color, #3b82f6);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  font-size: 0.875rem;
}
.icon {
  width: 1rem;
  height: 1rem;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const refreshButton = document.getElementById('refreshButton');
  if (refreshButton) {
    refreshButton.addEventListener('click', () => {
      window.location.reload();
    });
  }
});
</script>
