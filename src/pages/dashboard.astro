---
import Layout from "../layouts/Layout.astro";
import DashboardHeader from "../components/DashboardHeader.astro";
import Card from "../components/Card.astro";
import MetricsPanel from "../components/MetricsPanel.astro";
import ConnectionStatus from "../components/ConnectionStatus.astro";
import CacheStats from "../components/CacheStats.astro";
import { deviceService } from "../lib/deviceService.js";
import { loanService } from "../lib/loanService.js";
import type { PrismaClient as PrismaClientType } from "@prisma/client";
import { PrismaClient } from "../lib/prisma-adapter.js";
// No authentication required

// Obtener datos reales
const prisma: PrismaClientType = new PrismaClient();

// Obtener estadísticas de dispositivos
const { devices } = await deviceService.getAllDevices();
const availableDevices = devices.filter((d) => d.status === "available");
const loansInProgress = devices.filter((d) => d.status === "on_loan");

// Obtener préstamos recientes
const recentLoans = await loanService.getAllLoans();
const latestLoans = recentLoans
  .sort(
    (a, b) => new Date(b.loanDate).getTime() - new Date(a.loanDate).getTime()
  )
  .slice(0, 5);

// Obtener alertas activas
const alerts = await prisma.alert.findMany({
  where: { status: "active" },
  orderBy: { createdAt: "desc" },
  take: 5,
});

// Formatear fecha relativa
function getRelativeTime(date: string | number | Date): string {
  const now = new Date();
  const loanDate = new Date(date);
  const diffInHours = Math.floor(
    (now.getTime() - loanDate.getTime()) / (1000 * 60 * 60)
  );

  if (diffInHours < 1) return "Hace unos minutos";
  if (diffInHours < 24)
    return `Hace ${diffInHours} hora${diffInHours > 1 ? "s" : ""}`;

  const diffInDays = Math.floor(diffInHours / 24);
  if (diffInDays === 1) return "Ayer";
  if (diffInDays < 7) return `Hace ${diffInDays} días`;

  const diffInWeeks = Math.floor(diffInDays / 7);
  if (diffInWeeks === 1) return "Hace 1 semana";
  if (diffInWeeks < 4) return `Hace ${diffInWeeks} semanas`;

  const diffInMonths = Math.floor(diffInDays / 30);
  if (diffInMonths === 1) return "Hace 1 mes";
  return `Hace ${diffInMonths} meses`;
}

await prisma.$disconnect();
---

<Layout title="Panel de Control | Sistema de Gestión de Inventario">
  <DashboardHeader title="Panel de Control" />

  <div class="bg-gradient-to-r from-blue-500 to-blue-700 rounded-xl p-8 mb-8 shadow-lg flex flex-col items-start gap-2">
    <h1 class="text-2xl md:text-3xl font-bold text-white mb-1">Sistema de Gestión de Inventario</h1>
    <p class="text-white/90 text-base md:text-lg">Aquí tienes un resumen de la actividad reciente del sistema.</p>
  </div>

  <section class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 max-w-7xl mx-auto w-full mb-8">
    <!-- Tarjeta de Dispositivos -->
    <Card variant="elevated" padding="lg" class="flex flex-col h-full">
      <div class="mb-4">
        <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Resumen de Dispositivos</h2>
      </div>
      <div class="grid grid-cols-3 gap-4 mb-4">
        <div class="flex flex-col items-center bg-gray-100 dark:bg-gray-800 rounded-lg p-4">
          <span class="text-2xl font-bold text-blue-600 dark:text-blue-400">{devices.length}</span>
          <span class="text-xs text-gray-500 dark:text-gray-300">Total</span>
        </div>
        <div class="flex flex-col items-center bg-green-100 dark:bg-green-900 rounded-lg p-4">
          <span class="text-2xl font-bold text-green-600 dark:text-green-400">{availableDevices.length}</span>
          <span class="text-xs text-gray-500 dark:text-gray-300">Disponibles</span>
        </div>
        <div class="flex flex-col items-center bg-yellow-100 dark:bg-yellow-900 rounded-lg p-4">
          <span class="text-2xl font-bold text-yellow-600 dark:text-yellow-400">{loansInProgress.length}</span>
          <span class="text-xs text-gray-500 dark:text-gray-300">En Préstamo</span>
        </div>
      </div>
      <div class="mt-auto flex justify-center">
        <a href="/devices" class="inline-flex items-center gap-2 text-blue-600 hover:underline font-medium text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
          Ver todos los dispositivos
        </a>
      </div>
    </Card>

    <!-- Tarjeta de Préstamos Recientes -->
    <Card variant="elevated" padding="lg" class="flex flex-col h-full">
      <div class="mb-4">
        <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Préstamos Recientes</h2>
        <input id="dashboardLoanSearch" class="w-full rounded-md border border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-800 px-3 py-2 text-sm text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 mb-2" type="text" placeholder="Buscar por dispositivo o supervisor..." />
      </div>
      <div class="flex flex-col gap-3 mb-2" id="dashboardRecentLoans">
        {
          latestLoans.length > 0 ? (
            latestLoans.map((loan) => (
              <div class="flex justify-between items-center bg-gray-100 dark:bg-gray-800 rounded-lg px-4 py-3" data-device={loan.device.name} data-supervisor={loan.supervisor.name}>
                <div class="flex flex-col">
                  <span class="font-semibold text-gray-800 dark:text-white">{loan.device.name}</span>
                  <span class="text-xs text-gray-500 dark:text-gray-300">{loan.supervisor.name}</span>
                </div>
                <span class="text-xs text-gray-400 font-medium">{getRelativeTime(loan.loanDate)}</span>
              </div>
            ))
          ) : (
            <div class="text-center text-gray-400 italic py-6">No hay préstamos recientes</div>
          )
        }
      </div>
      <div id="dashboardNoLoansMsg" class="hidden text-center text-gray-400 py-4 text-sm italic">No se encontraron préstamos recientes con los criterios seleccionados.</div>
      <div class="mt-auto flex justify-center">
        <a href="/loans" class="inline-flex items-center gap-2 text-blue-600 hover:underline font-medium text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
          Ver todos los préstamos
        </a>
      </div>
    </Card>

    <!-- Tarjeta de Alertas Activas -->
    <Card variant="elevated" padding="lg" class="flex flex-col h-full">
      <div class="mb-4">
        <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Alertas Activas</h2>
      </div>
      <div class="flex flex-col gap-3 mb-2">
        {
          alerts.length > 0 ? (
            alerts.map((alert) => (
              <div class={`flex items-center gap-3 rounded-lg px-4 py-3 border-l-4 ${alert.type === 'warning' ? 'border-yellow-500 bg-yellow-50 dark:bg-yellow-900' : alert.type === 'danger' ? 'border-red-500 bg-red-50 dark:bg-red-900' : alert.type === 'info' ? 'border-blue-500 bg-blue-50 dark:bg-blue-900' : 'border-green-500 bg-green-50 dark:bg-green-900'}`}>
                <div class={`w-6 h-6 rounded-full ${alert.type === 'warning' ? 'bg-yellow-400' : alert.type === 'danger' ? 'bg-red-400' : alert.type === 'info' ? 'bg-blue-400' : 'bg-green-400'}`}></div>
                <div class="flex flex-col">
                  <span class="font-semibold text-gray-800 dark:text-white text-sm">{alert.type}</span>
                  <span class="text-xs text-gray-500 dark:text-gray-300">{alert.message}</span>
                </div>
              </div>
            ))
          ) : (
            <div class="text-center text-gray-400 italic py-6">No hay alertas activas</div>
          )
        }
      </div>
      <div class="mt-auto flex justify-center">
        <a href="/alerts" class="inline-flex items-center gap-2 text-blue-600 hover:underline font-medium text-sm">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" /></svg>
          Ver todas las alertas
        </a>
      </div>
    </Card>

    <!-- Accesos rápidos -->
    <Card variant="interactive" padding="lg" class="flex flex-col h-full col-span-1 md:col-span-2 xl:col-span-3">
      <div class="mb-4">
        <h2 class="text-lg font-semibold text-gray-800 dark:text-white mb-2">Accesos Rápidos</h2>
      </div>
      <div class="flex flex-wrap gap-4 justify-center">
        <a href="/devices" class="flex flex-col items-center justify-center bg-blue-100 dark:bg-blue-900 hover:bg-blue-200 dark:hover:bg-blue-800 text-blue-700 dark:text-blue-300 rounded-lg p-4 w-32 h-28 shadow transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17v-2a2 2 0 012-2h2a2 2 0 012 2v2m-6 4h6a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v12a2 2 0 002 2z" /></svg>
          <span class="font-medium text-sm">Dispositivos</span>
        </a>
        <a href="/loans" class="flex flex-col items-center justify-center bg-green-100 dark:bg-green-900 hover:bg-green-200 dark:hover:bg-green-800 text-green-700 dark:text-green-300 rounded-lg p-4 w-32 h-28 shadow transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 10c-2.21 0-4-1.79-4-4h2a2 2 0 004 0h2c0 2.21-1.79 4-4 4zm6-4v-2c0-2.21-1.79-4-4-4s-4 1.79-4 4v2H6v2h12v-2h-2z" /></svg>
          <span class="font-medium text-sm">Préstamos</span>
        </a>
        <a href="/alerts" class="flex flex-col items-center justify-center bg-yellow-100 dark:bg-yellow-900 hover:bg-yellow-200 dark:hover:bg-yellow-800 text-yellow-700 dark:text-yellow-300 rounded-lg p-4 w-32 h-28 shadow transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M12 2a10 10 0 100 20 10 10 0 000-20z" /></svg>
          <span class="font-medium text-sm">Alertas</span>
        </a>
        <a href="/supervisors" class="flex flex-col items-center justify-center bg-purple-100 dark:bg-purple-900 hover:bg-purple-200 dark:hover:bg-purple-800 text-purple-700 dark:text-purple-300 rounded-lg p-4 w-32 h-28 shadow transition-all">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mb-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a4 4 0 00-3-3.87M9 20H4v-2a4 4 0 013-3.87M16 3.13a4 4 0 010 7.75M8 3.13a4 4 0 000 7.75M12 14v7m0 0H9m3 0h3" /></svg>
          <span class="font-medium text-sm">Supervisores</span>
        </a>
      </div>
    </Card>
  </section>

  <div class="max-w-7xl mx-auto w-full flex flex-col gap-6">
    <MetricsPanel />
    <ConnectionStatus />
    <CacheStats />
  </div>
</Layout>

<script>
  // Filtrado de préstamos en tiempo real
  const searchInput = document.getElementById("dashboardLoanSearch");
  const loanItems = document.querySelectorAll(
    "#dashboardRecentLoans .flex.justify-between"
  );
  const noLoansMsg = document.getElementById("dashboardNoLoansMsg");

  if (searchInput) {
    searchInput.addEventListener("input", function () {
      const searchTerm = this.value.toLowerCase();
      let visibleCount = 0;

      loanItems.forEach((item) => {
        const device = item.getAttribute("data-device")?.toLowerCase() || "";
        const supervisor =
          item.getAttribute("data-supervisor")?.toLowerCase() || "";

        if (device.includes(searchTerm) || supervisor.includes(searchTerm)) {
          item.style.display = "flex";
          visibleCount++;
        } else {
          item.style.display = "none";
        }
      });

      if (noLoansMsg) {
        noLoansMsg.style.display = visibleCount === 0 ? "block" : "none";
      }
    });
  }
</script>
